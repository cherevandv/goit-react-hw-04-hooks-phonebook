{"version":3,"sources":["components/ContactForm/ContactForm.module.css","App.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleInputChange","e","currentTarget","value","formReset","className","s","form","preventDefault","label","htmlFor","type","placeholder","onChange","button","Filter","ContactList","contacts","onDeleteContact","map","id","onClick","initialData","App","data","window","localStorage","getItem","parsedData","JSON","parse","length","setContacts","filter","setFilter","useEffect","setItem","stringify","findSameName","find","contact","toLowerCase","filtredContacts","normalizeFilter","includes","getVisiblesContacts","container","alert","newContact","uuidv4","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+IACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,8B,mBCA/FD,EAAOC,QAAU,CAAC,UAAY,yB,gNCGf,SAASC,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SAAY,EACxBC,mBAAS,IADe,mBACzCC,EADyC,KACnCC,EADmC,OAEpBF,mBAAS,IAFW,mBAEzCG,EAFyC,KAEjCC,EAFiC,KAI1CC,EAAoB,SAAAC,GAAM,IAAD,EACLA,EAAEC,cAAlBN,EADqB,EACrBA,KAAMO,EADe,EACfA,MACd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MACF,QACE,SASAC,EAAY,WAChBP,EAAQ,IACRE,EAAU,KAGZ,OACE,uBAAMM,UAAWC,IAAEC,KAAMb,SAZN,SAAAO,GACnBA,EAAEO,iBACFd,EAAS,CAAEE,OAAME,WACjBM,KASA,UACE,wBAAOC,UAAWC,IAAEG,MAAOC,QAAQ,GAAnC,iBAEE,uBACEC,KAAK,OACLf,KAAK,OACLgB,YAAY,eACZT,MAAOP,EACPiB,SAAUb,OAGd,wBAAOK,UAAWC,IAAEG,MAAOC,QAAQ,GAAnC,mBAEE,uBACEC,KAAK,MACLf,KAAK,SACLgB,YAAY,uBACZT,MAAOL,EACPe,SAAUb,OAGd,wBAAQK,UAAWC,IAAEQ,OAAQH,KAAK,SAAlC,4B,UChCSI,EAnBA,SAAC,GAAyB,IAAvBZ,EAAsB,EAAtBA,MAAOU,EAAe,EAAfA,SACvB,OACE,0DAEE,uBACEF,KAAK,OACLC,YAAY,MACZT,MAAOA,EACPU,SAAUA,QCiBHG,G,MAzBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAClB,6BACGD,EAASE,KAAI,gBAAGC,EAAH,EAAGA,GAAIxB,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,+BACE,8BACGF,EADH,KACWE,KAEX,wBACEa,KAAK,SACLU,QAAS,WACPH,EAAgBE,IAHpB,sBAJOA,UCCTE,EAAc,CAClB,CAAEF,GAAI,OAAQxB,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEsB,GAAI,OAAQxB,KAAM,iBAAkBE,OAAQ,aAC9C,CAAEsB,GAAI,OAAQxB,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEsB,GAAI,OAAQxB,KAAM,iBAAkBE,OAAQ,cAGjC,SAASyB,IAAO,IAAD,EACI5B,oBAAS,WACvC,IAAM6B,EAAOC,OAAOC,aAAaC,QAAQ,YACnCC,EAAaC,KAAKC,MAAMN,GAC9B,OAAgB,OAATA,GAAuC,IAAtBI,EAAWG,OAA5B,UACCT,GACJM,KANsB,mBACrBX,EADqB,KACXe,EADW,OAQArC,mBAAS,IART,mBAQrBsC,EARqB,KAQbC,EARa,KAU5BC,qBAAU,WACRV,OAAOC,aAAaU,QAAQ,WAAYP,KAAKQ,UAAUpB,MACtD,CAACA,IAEJ,IAgBMqB,EAAe,SAAA1C,GACnB,OAAOqB,EAASsB,MACd,SAAAC,GAAO,OAAIA,EAAQ5C,KAAK6C,gBAAkB7C,EAAK6C,kBAiB7CC,EANsB,WAC1B,IAAMC,EAAkBV,EAAOQ,cAC/B,OAAOxB,EAASgB,QAAO,SAAAO,GAAO,OAC5BA,EAAQ5C,KAAK6C,cAAcG,SAASD,MAGhBE,GAExB,OACE,sBAAKxC,UAAWC,IAAEwC,UAAlB,UACE,2CACA,cAACrD,EAAD,CAAaC,SAxCK,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAC7B,IAAKF,IAASE,EACZ,OAAOiD,MAAM,wBAGf,GADiBT,EAAa1C,GAE5B,OAAOmD,MAAM,GAAD,OAAInD,EAAJ,6BAEd,IAAMoD,EAAa,CACjB5B,GAAI6B,cACJrD,OACAE,UAEFkC,EAAY,GAAD,mBAAKf,GAAL,CAAe+B,QA4BxB,0CACA,cAAC,EAAD,CAAQ7C,MAAO8B,EAAQpB,SAjBN,SAAAZ,GACnBiC,EAAUjC,EAAEC,cAAcC,UAiBxB,cAAC,EAAD,CAAac,SAAUyB,EAAiBxB,gBAtBtB,SAAAE,GACpBY,EAAYf,EAASgB,QAAO,SAAAO,GAAO,OAAIA,EAAQpB,KAAOA,YC5C1D8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC7B,EAAD,MAEF8B,SAASC,eAAe,W","file":"static/js/main.4a5df0b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__IWEEk\",\"label\":\"ContactForm_label__12d6p\",\"button\":\"ContactForm_button__2j1yw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3bOq0\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    formReset();\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor=\"\">\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name..\"\n          value={name}\n          onChange={handleInputChange}\n        ></input>\n      </label>\n      <label className={s.label} htmlFor=\"\">\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number..\"\n          value={number}\n          onChange={handleInputChange}\n        ></input>\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        placeholder=\"...\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id}>\n        <p>\n          {name}: {number}\n        </p>\n        <button\n          type=\"button\"\n          onClick={() => {\n            onDeleteContact(id);\n          }}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { useState, useEffect } from 'react';\nimport s from './App.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nconst initialData = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    const data = window.localStorage.getItem('contacts');\n    const parsedData = JSON.parse(data);\n    return data === null || parsedData.length === 0\n      ? [...initialData]\n      : parsedData;\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const createContact = ({ name, number }) => {\n    if (!name || !number) {\n      return alert(`Some field is empty.`);\n    }\n    const sameName = findSameName(name);\n    if (sameName) {\n      return alert(`${name} is already in contacts.`);\n    }\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    setContacts([...contacts, newContact]);\n  };\n\n  const findSameName = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n  const deleteContact = id => {\n    setContacts(contacts.filter(contact => contact.id !== id));\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisiblesContacts = () => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n  const filtredContacts = getVisiblesContacts();\n\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={createContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList contacts={filtredContacts} onDeleteContact={deleteContact} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}